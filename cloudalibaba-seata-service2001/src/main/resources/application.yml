server:
  port: 2001


spring:
  profiles:
    active: dev
  application:
    name: seata-order-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #nacos的ip地址
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/seata_order
    username: root
    password: root

seata:
  enabled: true
  enable-auto-data-source-proxy: true #是否开启数据源自动代理,默认为true
  tx-service-group: my_test_tx_group  #要与nacos配置中心的service.vgroupMapping.my_test_tx_group一致、
  # 以下都是在conf的registry.conf文件中对应
  registry:  #registry根据seata服务端的registry配置
    type: nacos #默认为file
    nacos:
      application: seata-server # 配置自己的seata服务
      server-addr: localhost:8848 #根据自己的seata服务配置
      username: nacos
      password: nacos
      namespace: 8b33c3f1-637c-4c73-9491-ae4e3b399aa1  # seata-server在nacos的命名空间ID
      cluster: default # 配置自己的seata服务cluster, 默认为 default
      group: SEATA_GROUP    # seata-server在nacos的分组
  config:
    type: nacos #默认file,如果使用file不配置下面的nacos,直接配置seata.service
    nacos:
      server-addr: localhost:8848 #配置自己的nacos地址
      group: SEATA_GROUP #seata-server在nacos的分组
      username: nacos
      password: nacos
      namespace: 8b33c3f1-637c-4c73-9491-ae4e3b399aa1
      dataId: seataServer.properties   #配置自己的dataId,由于搭建服务端时把客户端的配置也写在了seataServer.properties,所以这里用了和服务端一样的配置文件,实际客户端和服务端的配置文件分离出来更好

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml

feign:
  sentinel:
    enabled: true
  client:
    config:
      default: # default是全局默认的意思，单独设置可以加上服务名
        connect-timeout: 1000
        read-timeout: 2000


